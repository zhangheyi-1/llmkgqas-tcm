seed: 0
run_mode: 'train'
output_dir: './output'  # 当前不支持自定义修改，请勿修改该默认值
load_checkpoint: ''
auto_trans_ckpt: False  # If true, auto transform load_checkpoint to load in distributed model
resume_training: False

# context
context:
  mode: 0 #0--Graph Mode; 1--Pynative Mode
  device_target: "Ascend"
  enable_graph_kernel: False
  graph_kernel_flags: str = "--disable_expand_ops=Softmax,Dropout " \
                              "--enable_parallel_fusion=true --reduce_fuse_depth=8 --enable_auto_tensor_inplace=true"
  max_call_depth: 10000
  save_graphs: False
  save_graphs_path: "./graph"
  device_id: 0

# aicc
remote_save_url: "Please input obs url on AICC platform."

# runner
runner_config:
  epochs: 1
  batch_size: 128
  sink_size: 2
  image_size: 224
  sink_mode: True
runner_wrapper:
  type: TrainOneStepCell
  sens: 1024

# parallel
use_parallel: False
parallel:
  parallel_mode: 0 # 0-dataset, 1-semi, 2-auto, 3-hybrid
  gradients_mean: True
  enable_alltoall: False
  full_batch: False
  search_mode: "sharding_propagation"
  enable_parallel_optimizer: False
  strategy_ckpt_save_file: "./ckpt_strategy.ckpt"
parallel_config:
  data_parallel: 1
  model_parallel: 1
  expert_parallel: 1
  pipeline_stage: 1
  optimizer_shard: False
  micro_batch_num: 1
  gradient_aggregation_group: 4
micro_batch_interleave_num: 1

# moe
moe_config:
  expert_num: 1
  capacity_factor: 1.05
  aux_loss_factor: 0.05
  num_experts_chosen: 1

# recompute
recompute_config:
  recompute: False
  parallel_optimizer_comm_recompute: False
  mp_comm_recompute: True
  recompute_slice_activation: False

# autotune
auto_tune: False
filepath_prefix: './autotune'
autotune_per_step: 10

# profile
profile: False
profile_start_step: 1
profile_stop_step: 10
init_start_profile: False
profile_communication: False
profile_memory: True

# Trainer
trainer:
  type: MaskedLanguageModelingTrainer
  model_name: 'bert_base_uncased'

# train dataset
train_dataset: &train_dataset
  data_loader:
    type: TFRecordDataset
    dataset_dir: "./wiki_data"
    shuffle: True
    shard_equal_rows: True
  input_columns: ["input_ids", "input_mask", "segment_ids",
                  "next_sentence_labels", "masked_lm_positions",
                  "masked_lm_ids", "masked_lm_weights"]
  num_parallel_workers: 8
  python_multiprocessing: False
  drop_remainder: False
  batch_size: 1
  repeat: 1
  numa_enable: False
  prefetch_size: 1
train_dataset_task:
  type: MaskLanguageModelDataset
  dataset_config: *train_dataset

# model
model:
  model_config:
    type: BertConfig
    use_one_hot_embeddings: False
    num_labels: 1
    dropout_prob: 0.1
    batch_size: 128
    seq_length: 128 #length of input sentence
    vocab_size: 30522 #size of vocab
    hidden_size: 768 #size of text feature
    num_hidden_layers: 12 #model depth
    num_attention_heads: 12 #number of attention heads
    intermediate_size: 3072 #hidden_size*4
    hidden_act: "gelu" #activation
    post_layernorm_residual: True #select postlayernorm or prelayernorm
    hidden_dropout_prob: 0.1
    attention_probs_dropout_prob: 0.1
    max_position_embeddings: 512
    type_vocab_size: 2
    initializer_range: 0.02
    use_relative_positions: False
    use_past: False
    checkpoint_name_or_path: ""
  arch:
    type: BertForPreTraining

# lr sechdule
lr_schedule:
  type: cosine
  learning_rate: 0.0001
  lr_end: 0.000001
  warmup_steps: 10000
  total_steps: -1 # -1 means it will load the total steps of the dataset
layer_scale: False
layer_decay: 0.65

# optimizer
optimizer:
  type: adamw
  beta1: 0.9
  beta2: 0.999
  eps: 0.00000001 # 1e-8
  weight_decay: 0.05
lr_scale: False
lr_scale_factor: 256

# callbacks
callbacks:
  - type: MFLossMonitor
  - type: SummaryMonitor
    keep_default_action: True
  - type: CheckpointMointor
    prefix: "mindformers"
    save_checkpoint_steps: 10000
    integrated_save: True
    async_save: False
  - type: ObsMonitor
eval_callbacks:
  - type: ObsMonitor

# processor
processor:
  type: BertProcessor
  tokenizer:
    cls_token: '[CLS]'
    do_basic_tokenize: True
    do_lower_case: True
    mask_token: '[MASK]'
    pad_token: '[PAD]'
    sep_token: '[SEP]'
    type: BertTokenizer
    unk_token: '[UNK]'
  return_tensors: ms
